name: "test deploy"

on:
  push:
    branches:
      - main
    paths:
      - 10_infra/**
      - .github/workflows/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: 1.13.0
  AWS_REGION: ap-northeast-1
  PROJECT: tastylog
  ENV: odev

defaults:
  run:
    shell: bash
    working-directory: "10_infra/"

jobs:
  preview:
    name: "Preview"
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v5

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform format
        run: |
          terraform fmt -check
      
      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: Terraform init
        run: |
          terraform init -no-color

      - name: Terraform validate
        run: |
          terraform validate -no-color

      - name: Terraform plan
        run: |
          terraform plan \
           -var "project=${{ env.PROJECT }}" \
           -var "environment=${{ env.ENV }}" \
           -var "username=${{ secrets.MYSQL_USERNAME }}" \
           -var "password=${{ secrets.MYSQL_PASSWORD }}" \
           -input=false -no-color -detailed-exitcode


  deploy:
    name: "deploy"
    needs: preview
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v5

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform format
        run: |
          terraform fmt -check
      
      - name: Configure AWS Credential
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: Terraform init
        run: |
          terraform init -no-color

      - name: Terraform apply
        run: |
          terraform apply \
           -var "project=${{ env.PROJECT }}" \
           -var "environment=${{ env.ENV }}" \
           -var "username=${{ secrets.MYSQL_USERNAME }}" \
           -var "password=${{ secrets.MYSQL_PASSWORD }}" \
           -input=false -no-color -auto-approve